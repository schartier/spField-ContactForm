<?php/** * @version: $Id: contactform.php 0001 2011-10-12 18:02:23Z Sebastien Chartier $ * @package: SobiPro ContactForm Application for SobiPro * =================================================== * @author * Name: Sebastien Chartier * Email: sebastien.chartier@gmail.com * Url: http://www.chartiermedia.com * =================================================== * @copyright Copyright (C) 2011 ChartierMedia.com. All rights reserved. * @license see http://www.gnu.org/licenses/gpl.html GNU/GPL Version 3. * You can use, redistribute this file and/or modify it under the terms of the GNU General Public License version 3 * =================================================== * $Date: 2011-10-12 20:02:23 +0200 $ * $Revision: 0001 $ * $Author: Sebastien Chartier $ */defined( 'SOBIPRO' ) || exit( 'Restricted access' );SPLoader::loadController( 'config', true );/** * @author Sebastien Chartier * @version 1.0 * @created 22-Jun-2011 15:55:21 */class SPContactFormCtrl extends SPConfigAdmCtrl{	/**	 * @var string	 */	protected $_type = 'contactform';	/**	 * @var string	 */	protected $_defTask = 'config';	public function execute()	{		$this->_task = strlen( $this->_task ) ? $this->_task : $this->_defTask;		SPLang::load( 'SpApp.contactform' );		switch ( $this->_task ) {			case 'config':				$this->screen();				Sobi::ReturnPoint();				break;			case 'save':				$this->save();				break;			default:				Sobi::Error( 'SPContactFormCtrl', 'Task not found', SPC::WARNING, 404, __LINE__, __FILE__ );				break;		}	}	private function screen()	{		SPFactory::registry()->loadDBSection( $this->_type );		$view = $this->getView( $this->_type );		if( SPFs::exists( implode( DS, array( SOBI_PATH, 'opt', 'plugins', 'contactform', 'description_'.Sobi::Lang().'.html' ) ) ) ) {			$c = SPFs::read( implode( DS, array( SOBI_PATH, 'opt', 'plugins', 'contactform', 'description_'.Sobi::Lang().'.html' ) ) );		}		else {			$c = SPFs::read( implode( DS, array( SOBI_PATH, 'opt', 'plugins', 'contactform', 'description_en-GB.html' ) ) );		}		$view->assign( $c, 'description' );                $sid = Sobi::Reg('current_section');		$db = SPFactory::db();                $db->select('nid', 'spdb_field', "((fieldType='inbox' AND filter='email') OR fieldType='email') AND section='{$sid}'");                $results = $db->loadResultArray();                $email_fields = array(0 => Sobi::Txt('CF.SELECT_ONE'));                foreach( $results as $field ){                    $email_fields[$field] = $field;                }                $view->assign( $email_fields, 'email_fields' );                $styles = array(Sobi::Txt('CF.SELECT_ONE'));                $styles_dir = SPLoader::translatePath('contactform.styles', 'css', true, false);                foreach( scandir($styles_dir) as $file){                    if( is_dir( $styles_dir . DS . $file )                        && substr($file, 0, 1) != '.'){                        $styles[$file] = $file;                    }                }                $view->assign( $styles, 'styles' );                $displays = array(                    Sobi::Txt('CF.SELECT_ONE') => Sobi::Txt('CF.SELECT_ONE'),                    'form' => 'form',                    'popup' => 'popup'                );                $view->assign( $displays, 'displays' );                $view->assign( Sobi::Reg('contactform.email_field.value'), 'email_field');                $view->assign( Sobi::Reg('contactform.other_email.value'), 'other_email');                $view->assign( Sobi::Reg('contactform.display.value'), 'display');                $view->assign( Sobi::Reg('contactform.style.value'), 'style');                $view->assign( Sobi::Reg('contactform.mediabox_link_text.value', Sobi::Txt('CF.DEFAULT_TEXT_FOR_MEDIABOX')), 'mediabox_link_text');		$view->loadConfig( 'extensions.contactform' );		$view->setTemplate( 'extensions.contactform' );		$view->display();	}	protected function save()	{		SPFactory::registry()->saveDBSection( array(							array( 'key' => 'email_field', 'value' => SPRequest::string( 'email_field' ) ),                                                        array( 'key' => 'other_email', 'value' => SPRequest::string( 'other_email' ) ),                                                        array( 'key' => 'display', 'value' => SPRequest::string( 'display' ) ),                                                        array( 'key' => 'style', 'value' => SPRequest::string( 'style' ) ),                                                        array( 'key' => 'mediabox_link_text', 'value' => SPRequest::html( 'mediabox_link_text' ) )							), $this->_type );		Sobi::Redirect( SPMainFrame::getBack(), Sobi::Txt( 'MSG.ALL_CHANGES_SAVED' ) );	}}